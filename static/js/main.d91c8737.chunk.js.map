{"version":3,"sources":["middleware/localStorageWriter.js","actions/actions.js","reducers/cartReducer.js","reducers/totalReducer.js","reducers/orderReducer.js","common/orderState.js","store/store.js","common/colors.js","components/Button/Button.jsx","components/OrderForm/OrderForm.jsx","config/firebase.js","actionCreators/actionCreators.js","common/screenSizes.js","components/TextBlock/TextBlock.jsx","components/OrderListItem/OrderListItem.jsx","components/OrderList/OrderList.jsx","components/TotalCostLabel/TotalCostLabel.jsx","components/Cart/Cart.jsx","service/service.js","components/CatalogueItem/CatalogueItem.jsx","components/Catalogue/Catalogue.jsx","components/Header/Header.jsx","components/App.jsx","index.js"],"names":["localStorageWriter","store","next","action","result","state","getState","localStorage","order","JSON","stringify","ADD_ITEM_TO_CART","REMOVE_ITEM_FROM_CART","POST_ORDER_SUCCESS","CLOSE_ORDER","copyCart","oldCart","newCart","Object","keys","itemId","addItem","cart","newItem","id","count","removeItem","cartReducer","type","payload","removedItem","totalReducer","price","orderReducer","preloadedState","parse","total","createStore","combineReducers","form","formReducer","applyMiddleware","thunk","colors","text","secondaryText","divider","primary","lightPrimary","darkParimry","accentColor","Button","styled","button","Colors","Form","OrderButton","connect","isOrderListEmpty","length","reduxForm","handleSubmit","onSubmit","Field","name","required","placeholder","component","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","addItemToCart","item","removeItemFromCart","closeOrder","postOrder","clientInfo","dispatch","getStore","rootRef","database","ref","items","set","sizes","sm","md","lg","xl","TextBlock","div","Container","ImageContainer","Screens","OrderTextBlock","ButtonGroup","CountText","p","OrderListItem","imgUrl","title","onAddItem","onRemoveItem","src","alt","onClick","ul","values","bindActionCreators","orderListItems","map","TotalCostLabel","ThanksgivingMessageBlock","OrderContainer","EmtpyCardInfo","isOrderListEmty","totalCost","shouldRedirect","history","useHistory","setTimeout","push","getShoppingItems","a","itemsRef","once","snapshot","val","BuyButton","CatalogueItem","useState","setItems","useEffect","shoppingItems","fetchData","catalogueItems","HeaderBar","header","Contnainer","CartButton","ToCatalogueLink","isCartOpened","useLocation","pathname","includes","to","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d91c8737.chunk.js","sourcesContent":["const localStorageWriter = store => next => action => {\n    const result = next(action);\n    const state = store.getState();\n    localStorage.order = JSON.stringify(state);\n    return result;\n}\n\nexport default localStorageWriter;","export const ADD_ITEM_TO_CART = \"addItemToCart\";\nexport const REMOVE_ITEM_FROM_CART = \"removeItemFromCart\";\nexport const POST_ORDER_SUCCESS = \"postOrderSuccess\";\nexport const CLOSE_ORDER = \"closeOrder\";\n","import {\n  ADD_ITEM_TO_CART,\n  REMOVE_ITEM_FROM_CART,\n  POST_ORDER_SUCCESS,\n} from \"../actions/actions\";\n\nconst cartReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ADD_ITEM_TO_CART: {\n      const newItem = action.payload;\n      const newCart = addItem(state, newItem);\n      return newCart;\n    }\n    case REMOVE_ITEM_FROM_CART: {\n      const removedItem = action.payload;\n      const newCart = removeItem(state, removedItem);\n      return newCart;\n    }\n    case POST_ORDER_SUCCESS:\n      return {};\n    default:\n      return state;\n  }\n};\n\nconst copyCart = (oldCart) => {\n  const newCart = {};\n  for (const itemId of Object.keys(oldCart)) {\n    newCart[itemId] = { ...oldCart[itemId] };\n  }\n\n  return newCart;\n};\n\nconst addItem = (cart, newItem) => {\n  const newCart = copyCart(cart);\n\n  if (newCart[newItem.id]) {\n    newCart[newItem.id].count++;\n  } else {\n    newCart[newItem.id] = {\n      ...newItem,\n      count: 1,\n    };\n  }\n\n  return newCart;\n};\n\nconst removeItem = (cart, {id}) => {\n  const newCart = copyCart(cart);\n  newCart[id].count--;\n\n  if (newCart[id].count === 0) {\n    delete newCart[id];\n  }\n\n  return newCart;\n};\n\nexport default cartReducer;\n","import {\n    ADD_ITEM_TO_CART,\n    REMOVE_ITEM_FROM_CART,\n    POST_ORDER_SUCCESS,\n} from \"../actions/actions\";\n\nconst totalReducer = (state = 0, action) => {\n    switch (action.type) {\n        case ADD_ITEM_TO_CART:\n            return state + action.payload.price;\n        case REMOVE_ITEM_FROM_CART:\n            return state - action.payload.price;\n        case POST_ORDER_SUCCESS:\n            return 0;\n        default:\n            return state;\n    }\n}\n\nexport default totalReducer;","import {IDLE, SUCCEED} from \"../common/orderState\";\nimport {POST_ORDER_SUCCESS, CLOSE_ORDER} from \"../actions/actions\";\n\nconst orderReducer = (state = IDLE, action) => {\n    switch(action.type) {\n        case POST_ORDER_SUCCESS:\n            return SUCCEED;\n        case CLOSE_ORDER:\n            return IDLE;\n        default: return state;\n    }\n}\n\nexport default orderReducer;","export const IDLE = 0;\nexport const SUCCEED = 1;","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { reducer as formReducer } from \"redux-form\";\n\nimport localStorageWriter from \"../middleware/localStorageWriter\";\nimport cartReducer from \"../reducers/cartReducer\";\nimport totalReducer from \"../reducers/totalReducer\";\nimport orderReducer from \"../reducers/orderReducer\";\n\nconst preloadedState = localStorage.order ? JSON.parse( localStorage.order ) : {total: 0, cart: {}};\n\nconst store = createStore(\n  combineReducers({\n    total: totalReducer,\n    cart: cartReducer,\n    order: orderReducer,\n    form: formReducer,\n  }),\n  preloadedState,\n  applyMiddleware(thunk, localStorageWriter)\n);\n\nexport default store;\n","const colors = {\n    text: \"#212121\",\n    secondaryText: \"#757575\",\n    divider: \"#BDBDBD\",\n    primary: \"#FFEB3B\",\n    lightPrimary: \"#FFF9C4\",\n    darkParimry: \"#FBC02D\",\n    accentColor: \"#4CAF50\"\n}\n\nexport default colors;","import styled from \"styled-components\";\n\nimport Colors from \"../../common/colors\";\n\nconst Button = styled.button`\n    background-color: ${Colors.darkParimry};\n    color: ${Colors.text};\n    border-radius: 5px;\n    border: none;\n    box-shadow: 0px 2px 5px rgba(10, 10, 10, 50);\n    text-transform: uppercase;\n    letter-spacing: 0.1rem;\n    font-weight: bold;\n    outline: none;\n    transition: background-color 0.2s, box-shadow 0.2s;\n    cursor: pointer;\n\n    &:hover {\n        background-color: ${Colors.lightPrimary};\n    }\n    &:active {\n        box-shadow: none\n    }\n`;\n\nexport default Button;","import styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\n\nimport Button from \"../Button/Button\";\nimport Colors from \"../../common/colors\";\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  box-shadow: 0 2px 10px;\n  padding: 10px;\n\n  & input {\n    margin-bottom: 10px;\n    width: 100%;\n    padding: 10px 5px;\n  }\n`;\n\nconst OrderButton = styled(Button)`\n  width: 100%;\n  padding: 10px 0;\n  background-color: ${Colors.accentColor};\n  font-size: 1.5rem;\n`;\n\nconst OrderForm = ({ isOrderListEmpty, handleSubmit }) => {\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Field name=\"name\" required placeholder=\"NAME\" component=\"input\" />\n      <Field name=\"surname\" required placeholder=\"SURNAME\" component=\"input\" />\n      <Field name=\"address\" required placeholder=\"ADDRESS\" component=\"input\" />\n      <Field\n        name=\"phone\"\n        required\n        placeholder=\"PHONE\"\n        component=\"input\"\n        type=\"tel\"\n      />\n      {!isOrderListEmpty && <OrderButton>Order</OrderButton>}\n    </Form>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { cart } = state;\n  return {\n    isOrderListEmpty: Object.keys(cart).length === 0,\n  };\n};\n\nexport default connect(mapStateToProps)(reduxForm({ form: \"order\" })(OrderForm));\n","import firebase from \"firebase\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDZyWjzCxBvcTuXVD8wnxKAIshpSkg_Rlk\",\n  authDomain: \"lampa-technical-task.firebaseapp.com\",\n  databaseURL:\n    \"https://lampa-technical-task-default-rtdb.europe-west1.firebasedatabase.app\",\n  projectId: \"lampa-technical-task\",\n  storageBucket: \"lampa-technical-task.appspot.com\",\n  messagingSenderId: \"190753962354\",\n  appId: \"1:190753962354:web:0cd7edb995e481918785eb\",\n  measurementId: \"G-GWDMSQTYNF\",\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import firebase from \"../config/firebase\"\n\nimport {\n  ADD_ITEM_TO_CART,\n  REMOVE_ITEM_FROM_CART,\n  POST_ORDER_SUCCESS,\n  CLOSE_ORDER\n} from \"../actions/actions\";\n\nexport const addItemToCart = (item) => {\n  return {\n    type: ADD_ITEM_TO_CART,\n    payload: item,\n  };\n};\n\nexport const removeItemFromCart = (item) => {\n  return {\n    type: REMOVE_ITEM_FROM_CART,\n    payload: item,\n  };\n};\n\nexport const postOrderSuccess = () => {\n  return {\n    type: POST_ORDER_SUCCESS,\n  };\n};\n\nexport const closeOrder = () => {\n    return {\n        type: CLOSE_ORDER\n    }\n}\n\nexport const postOrder = (clientInfo) => {\n  return (dispatch, getStore) => {\n      const rootRef = firebase.database().ref(\"/order\");\n      const {cart, total} = getStore();\n      const order = {\n          items: Object.keys(cart),\n          clientInfo,\n          price: total,\n      }\n      rootRef.set(order);\n      dispatch(postOrderSuccess());\n  };\n};\n","const sizes = {\n    sm: \"576px\",\n    md: \"768px\",\n    lg: \"992px\",\n    xl: \"1200px\"\n}\n\nexport default sizes;","import styled from \"styled-components\";\n\nconst TextBlock = styled.div`\n  width: 100%;\n  padding: 0 10px;\n  font-size: 1.3rem;\n  & p {\n      margin-top: 10px;\n  }\n`;\n\nexport default TextBlock;","import styled from \"styled-components\";\n\nimport Screens from \"../../common/screenSizes\";\nimport TextBlock from \"../TextBlock/TextBlock\";\nimport Button from \"../Button/Button\";\n\nconst Container = styled.div`\n  display: flex;\n  box-shadow: 0 2px 10px;\n  height: 100px;\n`;\n\nconst ImageContainer = styled.div`\n  display: none;\n  & img {\n    display: block;\n    width: 100%;\n    height: 100%;\n  }\n\n  @media screen and (min-width: ${Screens.sm}) {\n    display: block;\n  }\n`;\n\nconst OrderTextBlock = styled(TextBlock)`\n  padding: 10px 0 10px 10px;\n  font-size: 1rem;\n  & p {\n    margin-top: 0;\n    margin-bottom: 10px;\n  }\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding-right: 20px;\n`;\n\nconst OrderButton = styled(Button)`\n  width: 30px;\n  height: 30px;\n  font-size: 1.4rem;\n`;\n\nconst CountText = styled.p`\n  width: 30px;\n  text-align: center;\n`;\n\nconst OrderListItem = ({\n  imgUrl,\n  title,\n  price,\n  count,\n  onAddItem,\n  onRemoveItem,\n}) => {\n  return (\n    <Container>\n      <ImageContainer>\n        <img src={imgUrl} alt=\"\"></img>\n      </ImageContainer>\n      <OrderTextBlock>\n        <p>Title: {title}</p>\n        <p>Price: {price}₴</p>\n      </OrderTextBlock>\n      <ButtonGroup>\n        <OrderButton onClick={onAddItem}>+</OrderButton>\n        <CountText>{count}</CountText>\n        <OrderButton onClick={onRemoveItem}>-</OrderButton>\n      </ButtonGroup>\n    </Container>\n  );\n};\n\nexport default OrderListItem;\n","import styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nimport {\n  addItemToCart,\n  removeItemFromCart,\n} from \"../../actionCreators/actionCreators\";\nimport OrderListItem from \"../OrderListItem/OrderListItem\";\n\nconst Container = styled.ul`\n  list-style: none;\n\n  & > li {\n    width: 100%;\n    margin-bottom: 10px;\n  }\n`;\n\nconst OrderList = ({ items, addItemToCart, removeItemFromCart }) => {\n  const orderListItems = items.map((item) => {\n    const { id, imgUrl, title, price, count } = item;\n    return (\n      <li key={id}>\n        <OrderListItem\n          imgUrl={imgUrl}\n          title={title}\n          price={price}\n          count={count}\n          onAddItem={() => addItemToCart(item)}\n          onRemoveItem={() => removeItemFromCart(item)}\n        />\n      </li>\n    );\n  });\n\n  return <Container>{orderListItems}</Container>;\n};\n\nconst mapStateToProps = (state) => {\n  const { cart } = state;\n  return { items: Object.values(cart) };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({ addItemToCart, removeItemFromCart }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderList);\n","import styled from \"styled-components\";\n\nconst TotalCostLabel = styled.div`\n  text-decoration: underline;\n  margin-right: auto;\n`;\n\nexport default TotalCostLabel;","import styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport OrderForm from \"../OrderForm/OrderForm\";\nimport OrderList from \"../OrderList/OrderList\";\nimport TotalCostLabel from \"../TotalCostLabel/TotalCostLabel\";\nimport Screens from \"../../common/screenSizes\";\nimport { closeOrder, postOrder } from \"../../actionCreators/actionCreators\";\nimport { SUCCEED } from \"../../common/orderState.js\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column-reverse;\n  max-width: 1200px;\n  width: 75%;\n  margin: 80px auto 0 auto;\n\n  & > * {\n    margin-bottom: 20px;\n  }\n\n  @media screen and (min-width: ${Screens.md}) {\n    flex-direction: column;\n  }\n`;\n\nconst ThanksgivingMessageBlock = styled.div`\n  display: flex;\n  height: 50vh;\n  justify-content: center;\n  align-items: center;\n  font-size: 1.5rem;\n  box-shadow: 0 2px 10px;\n`;\n\nconst OrderContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n\n  @media screen and (min-width: ${Screens.md}) {\n    flex-direction: row;\n\n    & > *:first-child {\n      flex: 2;\n      margin-right: 20px;\n    }\n\n    & > *:last-child {\n      flex: 1;\n      height: 265px;\n    }\n  }\n`;\n\nconst EmtpyCardInfo = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  box-shadow: 0 2px 10px;\n  font-size: 1.5rem;\n`;\n\nconst Cart = ({ totalCost, isOrderListEmty, shouldRedirect, postOrder, closeOrder }) => {\n  const handleSubmit = (values) => {\n    postOrder(values);\n  };\n\n  const history = useHistory();\n  if (shouldRedirect) {\n    setTimeout(() => {\n      closeOrder();\n      history.push(\"/\");\n    }, 3000);\n  }\n\n  return (\n    <Container>\n      {shouldRedirect && <ThanksgivingMessageBlock>Thank you for your order!</ThanksgivingMessageBlock>}\n      {!shouldRedirect && <OrderContainer>\n        {!isOrderListEmty && <OrderList />}\n        {isOrderListEmty && <EmtpyCardInfo>Your Cart is Empty</EmtpyCardInfo>}\n        <OrderForm onSubmit={handleSubmit} />\n      </OrderContainer>}\n      <TotalCostLabel>Total: {totalCost}₴</TotalCostLabel>\n    </Container>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { cart, total, order } = state;\n\n  return {\n    isOrderListEmty: Object.keys(cart).length === 0,\n    totalCost: total,\n    shouldRedirect: order === SUCCEED,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({ postOrder, closeOrder }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n","import firebase from \"../config/firebase\";\n\nexport const getShoppingItems = async () => {\n    const itemsRef = firebase.database().ref(\"items\");\n    const snapshot = await itemsRef.once(\"value\");\n    return snapshot.val();\n}\n\nexport const postOrder = (order, userDetails) => {\n    \n}","import styled from \"styled-components\";\n\nimport Button from \"../Button/Button\";\nimport TextBlock from \"../TextBlock/TextBlock\";\nimport Colors from \"../../common/colors\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  box-shadow: 0 2px 10px;\n  height: 300px;\n  padding-bottom: 10px;\n  color: ${Colors.text};\n`;\n\nconst ImageContainer = styled.div`\n  width: 100%;\n  height: 130px;\n  overflow: hidden;\n  & img {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nconst BuyButton = styled(Button)`\n  width: 80%;\n  padding: 10px 0;\n`;\n\nconst CatalogueItem = ({ imgUrl, title, price, onClick }) => {\n  return (\n    <Container>\n      <ImageContainer>\n        <img src={imgUrl} alt=\"\" />\n      </ImageContainer>\n      <TextBlock>\n        <p><b>Title:</b> {title}</p>\n        <p><b>Price:</b> {price}₴</p>\n      </TextBlock>\n      <BuyButton onClick={onClick}>Buy</BuyButton>\n    </Container>\n  );\n};\n\nexport default CatalogueItem;\n","import { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport styled from \"styled-components\";\n\nimport { getShoppingItems } from \"../../service/service\";\nimport Screens from \"../../common/screenSizes\";\nimport CatalogueItem from \"../CatalogueItem/CatalogueItem\";\nimport { addItemToCart } from \"../../actionCreators/actionCreators\";\n\nconst Container = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 1200px;\n  width: 75%;\n  margin: 80px auto 0 auto;\n\n  & > * {\n    margin: 0 0 20px 0;\n    width: 100%;\n    @media screen and (min-width: ${Screens.sm}) {\n      margin-right: 1%;\n      width: 48%;\n    }\n    @media screen and (min-width: ${Screens.md}) {\n      width: 32%;\n    }\n    @media screen and (min-width: ${Screens.lg}) {\n      width: 24%;\n    }\n    @media screen and (min-width: ${Screens.xl}) {\n      width: 19%;\n    }\n  }\n`;\n\nconst Catalogue = ({ addItemToCart }) => {\n  const [items, setItems] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const shoppingItems = await getShoppingItems();\n      setItems(shoppingItems);\n    }\n\n    fetchData();\n  }, []);\n\n  const catalogueItems = items.map((item) => {\n    const { id, imgUrl, title, price } = item;\n    return (\n      <li key={id}>\n        <CatalogueItem\n          imgUrl={imgUrl}\n          title={title}\n          price={price}\n          onClick={() => addItemToCart(item)}\n        />\n      </li>\n    );\n  });\n\n  return <Container>{catalogueItems}</Container>;\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({ addItemToCart }, dispatch);\n};\n\nexport default connect(null, mapDispatchToProps)(Catalogue);\n","import { useHistory, useLocation } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nimport styled from \"styled-components\";\n\nimport Colors from \"../../common/colors\";\nimport Button from \"../Button/Button\";\nimport TotalCostLabel from \"../TotalCostLabel/TotalCostLabel\";\n\nconst HeaderBar = styled.header`\n  width: 100%;\n  max-width: 1440px;\n  height: 72px;\n  padding: 0 20px;\n  background-color: ${Colors.primary};\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  position: fixed;\n  color: ${Colors.text};\n  left: 50%;\n  top: 0;\n  transform: translate(-50%, 0);\n  z-index: 1;\n`;\n\nconst Contnainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  width: 215px;\n`;\n\nconst CartButton = styled(Button)`\n  width: 80px;\n  height: 40px;\n  margin-left: 10px;\n`;\n\nconst ToCatalogueLink = styled.div`\n  margin-right: auto;\n\n  & > a {\n    color: ${Colors.text};\n    font-size: 1.2rem;\n    transition: color 0.2s;\n\n    &:hover {\n      color: ${Colors.secondaryText}\n    }\n  }\n`;\n\nconst Header = ({totalCost}) => {\n  const history = useHistory();\n  const location = useLocation();\n  const isCartOpened = location.pathname.includes(\"/cart\");\n\n  return (\n    <HeaderBar>\n      {!isCartOpened && (\n        <Contnainer>\n          {totalCost > 0 && (\n            <TotalCostLabel>Total: {totalCost}₴</TotalCostLabel>\n          )}\n          <CartButton onClick={() => history.push(\"/cart\")}>Cart</CartButton>\n        </Contnainer>\n      )}\n      {isCartOpened && (\n        <ToCatalogueLink>\n          <Link to=\"/\">To Catalogue</Link>\n        </ToCatalogueLink>\n      )}\n    </HeaderBar>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const {total} = state;\n\n  return {\n    totalCost: total,\n  }\n}\n\nexport default connect(mapStateToProps)(Header);\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\nimport store from \"../store/store\";\nimport Cart from \"./Cart/Cart\";\nimport Catalogue from \"./Catalogue/Catalogue\";\nimport Header from \"./Header/Header\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\">\n            <Catalogue />\n          </Route>\n          <Route path=\"/cart\">\n            <Cart />\n          </Route>\n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}